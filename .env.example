# Конфигурация Telegram AI Agent
# Скопируйте этот файл как .env и заполните свои значения

# === ОБЯЗАТЕЛЬНЫЕ НАСТРОЙКИ ===

# Токен вашего Telegram бота (получите у @BotFather)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# API ключ OpenAI (получите на https://platform.openai.com/api-keys)
OPENAI_API_KEY=your_openai_api_key_here

# URL базы данных PostgreSQL
# Для локальной разработки: postgresql://username:password@localhost:5432/database_name
# Для Railway: автоматически устанавливается при развертывании
DATABASE_URL=your_database_url_here

# === ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ ===

# Модель OpenAI для использования (по умолчанию: gpt-4o)
OPENAI_MODEL=gpt-4o

# Температура для генерации ответов (0.0-2.0, по умолчанию: 0.8)
TEMPERATURE=0.8

# Таймаут запросов к OpenAI в секундах (по умолчанию: 30)
REQUEST_TIMEOUT=30

# Максимальная длина ответа в Telegram (по умолчанию: 3500)
MAX_TG_REPLY=3500

# ID администраторов бота (через запятую, необязательно)
# Пример: ADMINS=123456789,987654321
ADMINS=

# === НАСТРОЙКИ WEBHOOK (ОПЦИОНАЛЬНО) ===
# Для webhook режима работы бота (более надёжный, чем polling)
# Webhook URL должен быть доступен из интернета (например, через ngrok или хостинг)

# URL webhook для Telegram (если не указан, используется polling)
# Пример: WEBHOOK_URL=https://yourdomain.com/webhook
# Для Railway: WEBHOOK_URL=https://your-app.up.railway.app/webhook
WEBHOOK_URL=

# Секретный токен для webhook (рекомендуется изменить)
WEBHOOK_SECRET=telegram_webhook_secret

# Путь webhook (по умолчанию /webhook)
WEBHOOK_PATH=/webhook

# Порт для webhook сервера (по умолчанию 8443)
PORT=8443

# Хост для webhook сервера (по умолчанию 0.0.0.0)
HOST=0.0.0.0

# === ИНСТРУКЦИИ ===
# 1. Получите токен бота у @BotFather в Telegram
# 2. Создайте API ключ на https://platform.openai.com/api-keys
# 3. Настройте PostgreSQL базу данных (локально или Railway)
# 4. Запустите: python init_db.py (для инициализации БД)
# 5. Запустите: python run_bot.py (для запуска бота)
