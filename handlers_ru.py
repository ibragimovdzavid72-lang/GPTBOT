"""Русский Обработчик Сообщений"""

import asyncio
import time
from datetime import datetime
from typing import Any, Dict, List, Optional

import structlog
from config_ru import настройки, получить_текст, это_админ, получить_лимиты_тарифа

лог = structlog.get_logger("обработчики")


class ОбработчикСообщений:
    """Комплексный русский обработчик сообщений со всеми функциями бота."""
    
    def __init__(self, телеграм_клиент, опенаи_клиент, менеджер_бд, менеджер_платежей, аналитика_движок):
        self.телеграм = телеграм_клиент
        self.опенаи = опенаи_клиент
        self.бд = менеджер_бд
        self.платежи = менеджер_платежей
        self.аналитика = аналитика_движок
        
        # Состояния пользователей для разговоров
        self.состояния_пользователей = {}
    
    async def обработать_сообщение(self, сообщение: Dict[str, Any]):
        """Обработать входящее сообщение."""
        время_старта = time.perf_counter()
        
        try:
            данные_пользователя = сообщение.get("from", {})
            ид_чата = сообщение["chat"]["id"]
            телеграм_ид = данные_пользователя["id"]
            
            # Получить или создать пользователя
            пользователь = await self.бд.получить_или_создать_пользователя(
                телеграм_ид=телеграм_ид,
                имя_пользователя=данные_пользователя.get("username"),
                имя=данные_пользователя.get("first_name"),
                фамилия=данные_пользователя.get("last_name"),
                код_языка=данные_пользователя.get("language_code", "ru")
            )
            
            # Проверить, заблокирован ли пользователь
            if пользователь.заблокирован:
                await self.телеграм.отправить_сообщение(
                    ид_чата=ид_чата,
                    текст="❌ Вы заблокированы"
                )
                return
            
            # Обработать разные типы сообщений
            if "text" in сообщение:
                await self._обработать_текстовое_сообщение(сообщение, пользователь)
            elif "photo" in сообщение:
                await self._обработать_фото_сообщение(сообщение, пользователь)
            elif "voice" in сообщение:
                await self._обработать_голосовое_сообщение(сообщение, пользователь)
            elif "document" in сообщение:
                await self._обработать_документ_сообщение(сообщение, пользователь)
            
            # Записать аналитику
            длительность = time.perf_counter() - время_старта
            if self.аналитика:
                self.аналитика.записать_обработанное_сообщение(пользователь.ид, длительность)
            
        except Exception as e:
            лог.error("Ошибка обработки сообщения", ошибка=str(e))
    
    async def _обработать_текстовое_сообщение(self, сообщение: Dict[str, Any], пользователь):
        """Обработать текстовые сообщения."""
        текст = сообщение["text"]
        ид_чата = сообщение["chat"]["id"]
        
        # Обработать команды
        if текст.startswith("/"):
            await self._обработать_команду(сообщение, пользователь)
            return
        
        # Проверить состояние пользователя для специальных вводов
        состояние_пользователя = self.состояния_пользователей.get(пользователь.телеграм_ид)
        if состояние_пользователя:
            await self._обработать_ввод_состояния(текст, состояние_пользователя, сообщение, пользователь)
            return
        
        # Проверить лимиты
        лимиты = await self.бд.проверить_лимиты_пользователя(пользователь.телеграм_ид)
        if not лимиты["может_отправить_сообщение"]:
            await self._отправить_сообщение_лимитов(ид_чата, лимиты, пользователь.код_языка)
            return
        
        # Модерация контента
        if настройки.безопасность.включить_модерацию_контента:
            модерация = await self.опенаи.модерировать_контент(текст)
            if модерация["помечено"]:
                await self.телеграм.отправить_сообщение(
                    ид_чата=ид_чата,
                    текст=получить_текст("ошибка_модерации", пользователь.код_языка)
                )
                return
        
        # Отправить действие печатает
        await self.телеграм.печатает(ид_чата)
        
        # Подготовить сообщения для OpenAI
        сообщения = [
            {"role": "user", "content": текст}
        ]
        
        # Генерировать ответ
        ответ = await self.опенаи.завершение_чата(
            сообщения=сообщения,
            ид_пользователя=пользователь.ид,
            использовать_инструменты=True
        )
        
        # Отправить ответ
        await self.телеграм.отправить_сообщение(
            ид_чата=ид_чата,
            текст=ответ["содержимое"],
            разметка_ответа=self.телеграм.получить_главное_меню_клавиатуру(пользователь.код_языка, это_админ(пользователь.телеграм_ид))
        )
        
        # Обновить использование
        await self.бд.увеличить_использование(пользователь.телеграм_ид, "сообщения", 1)
    
    async def _обработать_команду(self, сообщение: Dict[str, Any], пользователь):
        """Обработать команды бота."""
        текст = сообщение["text"]
        ид_чата = сообщение["chat"]["id"]
        команда = текст.split()[0].lower()
        
        if команда == "/start":
            await self._обработать_команду_старт(ид_чата, пользователь)
        elif команда == "/help":
            await self._обработать_команду_помощь(ид_чата, пользователь)
        elif команда == "/stats" and это_админ(пользователь.телеграм_ид):
            await self._обработать_команду_статистика(ид_чата, пользователь)
    
    async def _обработать_команду_старт(self, ид_чата: int, пользователь):
        """Обработать команду /start - ОБНОВЛЕННАЯ ВЕРСИЯ."""
        имя = пользователь.имя or "Друг"
        текст_приветствия = получить_текст("приветствие", пользователь.код_языка, имя=имя)
        клавиатура = self.телеграм.получить_главное_меню_клавиатуру(пользователь.код_языка, это_админ(пользователь.телеграм_ид))
        
        await self.телеграм.отправить_сообщение(
            ид_чата=ид_чата,
            текст=текст_приветствия,
            разметка_ответа=клавиатура
        )
    
    async def _обработать_фото_сообщение(self, сообщение: Dict[str, Any], пользователь):
        """Обработать фото сообщения."""
        if not настройки.функции.включить_видение:
            return
        
        ид_чата = сообщение["chat"]["id"]
        
        # Проверить лимиты
        лимиты = await self.бд.проверить_лимиты_пользователя(пользователь.телеграм_ид)
        if not лимиты["может_отправить_сообщение"]:
            await self._отправить_сообщение_лимитов(ид_чата, лимиты, пользователь.код_языка)
            return
        
        await self.телеграм.отправить_действие_чата(ид_чата, "typing")
        
        try:
            # Получить самое большое фото
            фото = max(сообщение["photo"], key=lambda x: x.get("file_size", 0))
            
            # Скачать фото (упрощенная версия)
            подпись = сообщение.get("caption", "Опишите это изображение подробно")
            анализ = f"🔍 **Анализ изображения:**\n\nИзображение получено и анализируется... \n\n📸 Описание: {подпись}"
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=анализ,
                ответ_на_сообщение_ид=сообщение["message_id"]
            )
            
        except Exception as e:
            лог.error("Анализ фото не удался", ошибка=str(e))
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=получить_текст("ошибка_общая", пользователь.код_языка)
            )
    
    async def обработать_колбек_запрос(self, колбек_запрос: Dict[str, Any]):
        """Обработать колбек запросы от инлайн клавиатур - ИСПРАВЛЕННАЯ ВЕРСИЯ."""
        try:
            ид_запроса = колбек_запрос["id"]
            данные = колбек_запрос["data"]
            сообщение = колбек_запрос["message"]
            ид_чата = сообщение["chat"]["id"]
            данные_пользователя = колбек_запрос["from"]
            
            пользователь = await self.бд.получить_или_создать_пользователя(данные_пользователя["id"])
            if not пользователь:
                await self.телеграм.ответить_на_колбек_запрос(ид_запроса, "Пользователь не найден")
                return
            
            # Разбор callback данных
            части = данные.split(":")
            действие = части[0]
            параметр = части[1] if len(части) > 1 else None
            
            # Маршрутизация к обработчикам
            if действие == "функция":
                await self._обработать_функцию_колбек(параметр, ид_чата, пользователь)
            elif действие == "персоны":
                await self._обработать_персоны_колбек(параметр, ид_чата, пользователь)
            elif действие == "инструменты":
                await self._обработать_инструменты_колбек(параметр, ид_чата, пользователь)
            elif действие == "игры":
                await self._обработать_игры_колбек(параметр, ид_чата, пользователь)
            elif действие == "премиум":
                await self._обработать_премиум_колбек(параметр, ид_чата, пользователь)
            elif действие == "статистика":
                await self._обработать_статистику_колбек(параметр, ид_чата, пользователь)
            elif действие == "настройки":
                await self._обработать_настройки_колбек(параметр, ид_чата, пользователь)
            
            # Ответ на callback
            await self.телеграм.ответить_на_колбек_запрос(ид_запроса, "✅")
            
            # Обработать разные типы колбеков
            if данные.startswith("главное_"):
                await self._обработать_колбек_главного_меню(данные, сообщение, пользователь, ид_запроса)
            elif данные.startswith("инструмент_"):
                await self._обработать_колбек_инструмента(данные, сообщение, пользователь, ид_запроса)
            elif данные.startswith("админ_"):
                await self._обработать_колбек_админа(данные, сообщение, пользователь, ид_запроса)
            elif данные.startswith("подписаться_"):
                await self._обработать_колбек_подписки(данные, сообщение, пользователь, ид_запроса)
            
        except Exception as e:
            лог.error("Ошибка обработки колбек запроса", ошибка=str(e))
    
    async def _обработать_колбек_главного_меню(self, данные: str, сообщение: Dict, пользователь, ид_запроса: str):
        """Обработать колбеки главного меню."""
        ид_чата = сообщение["chat"]["id"]
        ид_сообщения = сообщение["message_id"]
        
        if данные == "главное_чат":
            текст = "💬 Режим чата активен. Просто напишите ваше сообщение!"
            клавиатура = self.телеграм.получить_главное_меню_клавиатуру(пользователь.код_языка, это_админ(пользователь.телеграм_ид))
        elif данные == "главное_изображения":
            текст = "🎨 Опишите изображение, которое хотите создать:"
            self.состояния_пользователей[пользователь.телеграм_ид] = {"состояние": "ожидание_промпта_изображения"}
            клавиатура = None
        elif данные == "главное_инструменты":
            текст = "🛠 Выберите нужный инструмент:"
            клавиатура = self.телеграм.получить_клавиатуру_инструментов(пользователь.код_языка)
        elif данные == "главное_настройки":
            текст = "⚙️ Настройки и управление:"
            клавиатура = self._получить_клавиатуру_настроек(пользователь.код_языка)
        elif данные == "главное_помощь":
            текст = получить_текст("помощь", пользователь.код_языка)
            клавиатура = self.телеграм.получить_главное_меню_клавиатуру(пользователь.код_языка, это_админ(пользователь.телеграм_ид))
        else:
            текст = "Неизвестная команда"
            клавиатура = None
        
        await self.телеграм.редактировать_текст_сообщения(
            ид_чата=ид_чата,
            ид_сообщения=ид_сообщения,
            текст=текст,
            разметка_ответа=клавиатура
        )
        
        await self.телеграм.ответить_на_колбек_запрос(ид_запроса)
    
    def _получить_клавиатуру_настроек(self, язык_пользователя: str = "ru") -> Dict[str, Any]:
        """Получить клавиатуру настроек."""
        кнопки = [
            [
                {"text": получить_текст("кнопка_статистика", язык_пользователя), "callback_data": "настройки_статистика"},
                {"text": получить_текст("кнопка_подписка", язык_пользователя), "callback_data": "настройки_подписка"}
            ],
            [
                {"text": получить_текст("кнопка_назад", язык_пользователя), "callback_data": "главное_меню"}
            ]
        ]
        
        return self.телеграм.создать_инлайн_клавиатуру(кнопки)
    
    async def _отправить_сообщение_лимитов(self, ид_чата: int, лимиты: Dict, язык: str):
        """Отправить сообщение о превышении лимитов."""
        текст = получить_текст("лимиты_превышены", язык,
                              использовано_сообщений=лимиты["лимиты"]["сообщения"]["использовано"],
                              лимит_сообщений=лимиты["лимиты"]["сообщения"]["лимит"],
                              использовано_изображений=лимиты["лимиты"]["изображения"]["использовано"],
                              лимит_изображений=лимиты["лимиты"]["изображения"]["лимит"])
        
        клавиатура = self.телеграм.получить_клавиатуру_подписки(язык)
        
        await self.телеграм.отправить_сообщение(
            ид_чата=ид_чата,
            текст=текст,
            разметка_ответа=клавиатура
        )
    
    async def _обработать_ввод_состояния(self, текст: str, состояние: Dict, сообщение: Dict, пользователь):
        """Обработать ввод на основе состояния пользователя."""
        ид_чата = сообщение["chat"]["id"]
        
        if состояние["состояние"] == "ожидание_промпта_изображения":
            await self._сгенерировать_изображение(текст, ид_чата, пользователь)
            del self.состояния_пользователей[пользователь.телеграм_ид]
        elif состояние["состояние"] == "ожидание_города_погоды":
            await self._получить_погоду(текст, ид_чата, пользователь)
            del self.состояния_пользователей[пользователь.телеграм_ид]
    
    async def _сгенерировать_изображение(self, промпт: str, ид_чата: int, пользователь):
        """Сгенерировать изображение с DALL-E."""
        # Проверить лимиты
        лимиты = await self.бд.проверить_лимиты_пользователя(пользователь.телеграм_ид)
        if not лимиты["может_создать_изображение"]:
            await self._отправить_сообщение_лимитов(ид_чата, лимиты, пользователь.код_языка)
            return
        
        await self.телеграм.загружает_фото(ид_чата)
        
        try:
            # Сгенерировать изображение
            результат = await self.опенаи.сгенерировать_изображение(промпт, ид_пользователя=пользователь.ид)
            
            # Отправить изображение
            await self.телеграм.отправить_фото(
                ид_чата=ид_чата,
                фото=результат["ссылка"],
                подпись=f"🎨 **Создано по запросу:** {промпт}"
            )
            
            # Обновить использование
            await self.бд.увеличить_использование(пользователь.телеграм_ид, "изображения", 1)
            
        except Exception as e:
            лог.error("Генерация изображения не удалась", ошибка=str(e))
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=получить_текст("ошибка_общая", пользователь.код_языка)
            )
    
    async def обработать_инлайн_запрос(self, инлайн_запрос: Dict[str, Any]):
        """Обработать инлайн запросы."""
        # Базовая поддержка инлайн запросов
        ид_запроса = инлайн_запрос["id"]
        
        # Пока просто отвечаем пустыми результатами
        await self.телеграм._сделать_запрос("answerInlineQuery", json={
            "inline_query_id": ид_запроса,
            "results": []
        })
    
    # НОВЫЕ ИННОВАЦИОННЫЕ МЕТОДЫ
    
    async def _обработать_функцию_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать основные функции."""
        if параметр == "чат":
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="💬 **Умный чат активирован!**\n\nТеперь просто напишите любой вопрос, и я отвечу с помощью GPT-4o!"
            )
        elif параметр == "арт":
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="🎨 **Генератор изображений готов!**\n\nОпишите что вы хотите создать, и я нарисую это с помощью DALL-E 3!\n\nПример: 'Нарисуй космического кота в стиле Van Gogh'"
            )
        elif параметр == "анализ":
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="👁️ **Анализатор изображений активирован!**\n\nОтправьте мне любое изображение, и я подробно его проанализирую!"
            )
    
    async def _обработать_персоны_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать AI персоны."""
        if параметр == "меню":
            клавиатура = {
                "inline_keyboard": [
                    [
                        {"text": "🧠 Эйнштейн", "callback_data": "персона:эйнштейн"},
                        {"text": "🎨 да Винчи", "callback_data": "персона:давинчи"}
                    ],
                    [
                        {"text": "💼 Стив Джобс", "callback_data": "персона:джобс"},
                        {"text": "🧙‍♂️ Сократ", "callback_data": "персона:сократ"}
                    ],
                    [
                        {"text": "👨‍🍳 Гордон Рамзи", "callback_data": "персона:повар"},
                        {"text": "🎭 Шекспир", "callback_data": "персона:шекспир"}
                    ],
                    [
                        {"text": "🔙 Назад", "callback_data": "функция:главное_меню"}
                    ]
                ]
            }
            
            текст = "🧙‍♂️ **AI ПЕРСОНЫ**\n\n" \
                   "Выберите с кем хотите поговорить:\n\n" \
                   "🧠 **Эйнштейн** - Гениальный физик\n" \
                   "🎨 **да Винчи** - Великий художник\n" \
                   "💼 **Джобс** - Визионер технологий\n" \
                   "🧙‍♂️ **Сократ** - Мудрый философ\n" \
                   "👨‍🍳 **Рамзи** - Шеф-повар\n" \
                   "🎭 **Шекспир** - Великий драматург"
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=текст,
                разметка_ответа=клавиатура
            )
    
    async def _обработать_инструменты_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать инструменты."""
        if параметр == "меню":
            клавиатура = {
                "inline_keyboard": [
                    [
                        {"text": "🌤️ Погода", "callback_data": "инструмент:погода"},
                        {"text": "📚 Wikipedia", "callback_data": "инструмент:вики"}
                    ],
                    [
                        {"text": "🧮 Калькулятор", "callback_data": "инструмент:калькулятор"},
                        {"text": "🔤 Переводчик", "callback_data": "инструмент:переводчик"}
                    ],
                    [
                        {"text": "⏰ Напоминания", "callback_data": "инструмент:напоминания"},
                        {"text": "📊 QR-код", "callback_data": "инструмент:qr"}
                    ],
                    [
                        {"text": "🔙 Назад", "callback_data": "функция:главное_меню"}
                    ]
                ]
            }
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="🛠️ **УМНЫЕ ИНСТРУМЕНТЫ**\n\nВыберите нужный инструмент:",
                разметка_ответа=клавиатура
            )
    
    async def _обработать_игры_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать игры."""
        if параметр == "меню":
            клавиатура = {
                "inline_keyboard": [
                    [
                        {"text": "🔮 Мистический квест", "callback_data": "игра:квест"},
                        {"text": "🧩 Загадки", "callback_data": "игра:загадки"}
                    ],
                    [
                        {"text": "📚 Создай историю", "callback_data": "игра:история"},
                        {"text": "🎭 Ролевая игра", "callback_data": "игра:роль"}
                    ],
                    [
                        {"text": "🎯 Угадай число", "callback_data": "игра:число"},
                        {"text": "🏙️ Города", "callback_data": "игра:города"}
                    ],
                    [
                        {"text": "🔙 Назад", "callback_data": "функция:главное_меню"}
                    ]
                ]
            }
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="🎮 **ИНТЕРАКТИВНЫЕ ИГРЫ**\n\nВыберите игру:",
                разметка_ответа=клавиатура
            )
    
    async def _обработать_премиум_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать премиум функции."""
        if параметр == "тарифы":
            клавиатура = {
                "inline_keyboard": [
                    [
                        {"text": "🔥 БАЗОВЫЙ - 199₽", "callback_data": "купить:базовый"}
                    ],
                    [
                        {"text": "⚡ ПРО - 399₽", "callback_data": "купить:про"}
                    ],
                    [
                        {"text": "👑 ЭЛИТ - 799₽", "callback_data": "купить:элит"}
                    ],
                    [
                        {"text": "🎁 Пробный период", "callback_data": "премиум:пробный"}
                    ],
                    [
                        {"text": "🔙 Назад", "callback_data": "функция:главное_меню"}
                    ]
                ]
            }
            
            текст = "💎 **ПРЕМИУМ ТАРИФЫ**\n\n" \
                   "🔥 **БАЗОВЫЙ (199₽/мес)**\n" \
                   "• 1000 сообщений/день\n" \
                   "• 50 изображений/день\n" \
                   "• Базовые AI персоны\n\n" \
                   "⚡ **ПРО (399₽/мес)**\n" \
                   "• Безлимитные сообщения\n" \
                   "• 200 изображений/день\n" \
                   "• Все AI персоны\n" \
                   "• Приоритетная обработка\n\n" \
                   "👑 **ЭЛИТ (799₽/мес)**\n" \
                   "• Все функции ПРО\n" \
                   "• Безлимитные изображения\n" \
                   "• Эксклюзивные персоны\n" \
                   "• Персональная поддержка"
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=текст,
                разметка_ответа=клавиатура
            )
    
    async def _обработать_статистику_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать статистику."""
        if параметр == "мой":
            # Получить статистику пользователя
            статистика = await self.бд.получить_статистику_пользователя(пользователь.телеграм_ид)
            
            текст = f"📊 **ВАША СТАТИСТИКА**\n\n" \
                   f"💬 Сообщений отправлено: {статистика.get('сообщения', 0)}\n" \
                   f"🎨 Изображений создано: {статистика.get('изображения', 0)}\n" \
                   f"🔊 Голосовых сообщений: {статистика.get('голос', 0)}\n" \
                   f"📅 Дней активности: {статистика.get('дни_активности', 0)}\n" \
                   f"⭐ Уровень: {статистика.get('уровень', 1)}\n" \
                   f"🏆 Достижений: {статистика.get('достижения', 0)}"
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст=текст
            )
    
    async def _обработать_настройки_колбек(self, параметр: str, ид_чата: int, пользователь):
        """Обработать настройки."""
        if параметр == "меню":
            клавиатура = {
                "inline_keyboard": [
                    [
                        {"text": "🌍 Язык", "callback_data": "настройка:язык"},
                        {"text": "🔔 Уведомления", "callback_data": "настройка:уведомления"}
                    ],
                    [
                        {"text": "🎨 Тема", "callback_data": "настройка:тема"},
                        {"text": "🔒 Приватность", "callback_data": "настройка:приватность"}
                    ],
                    [
                        {"text": "🔙 Назад", "callback_data": "функция:главное_меню"}
                    ]
                ]
            }
            
            await self.телеграм.отправить_сообщение(
                ид_чата=ид_чата,
                текст="⚙️ **НАСТРОЙКИ**\n\nВыберите что настроить:",
                разметка_ответа=клавиатура
            )
