#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
================================
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ AI –±–æ—Ç–∞.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏.
"""

import asyncio
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from config_ru import –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from database_ru import –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–î
import structlog

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
structlog.configure(
    processors=[structlog.dev.ConsoleRenderer(colors=True)],
    wrapper_class=structlog.make_filtering_bound_logger(20),
    logger_factory=structlog.stdlib.LoggerFactory(),
    cache_logger_on_first_use=True,
)

–ª–æ–≥ = structlog.get_logger("init_database")


async def main():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        –ª–æ–≥.info("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º DATABASE_URL
        if not –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.–±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö.—Å—Å—ã–ª–∫–∞:
            –ª–æ–≥.error("‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            –ª–æ–≥.info("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL")
            –ª–æ–≥.info("–ü—Ä–∏–º–µ—Ä: postgresql://user:password@host:port/database")
            return False
        
        –ª–æ–≥.info(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {–Ω–∞—Å—Ç—Ä–æ–π–∫–∏.–±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö.—Å—Å—ã–ª–∫–∞}")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ë–î
        –º–µ–Ω–µ–¥–∂–µ—Ä_–±–¥ = –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–î(–Ω–∞—Å—Ç—Ä–æ–π–∫–∏.–±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö.—Å—Å—ã–ª–∫–∞)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        await –º–µ–Ω–µ–¥–∂–µ—Ä_–±–¥.–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
        if await –º–µ–Ω–µ–¥–∂–µ—Ä_–±–¥.–ø—Ä–æ–≤–µ—Ä–∫–∞_–∑–¥–æ—Ä–æ–≤—å—è():
            –ª–æ–≥.info("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
            –ª–æ–≥.info("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ")
            return True
        else:
            –ª–æ–≥.error("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö!")
            return False
            
    except Exception as e:
        –ª–æ–≥.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", –æ—à–∏–±–∫–∞=str(e))
        return False
    finally:
        if '–º–µ–Ω–µ–¥–∂–µ—Ä_–±–¥' in locals():
            await –º–µ–Ω–µ–¥–∂–µ—Ä_–±–¥.–∑–∞–∫—Ä—ã—Ç—å()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç = asyncio.run(main())
    
    if —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
        print("\n‚úÖ –£–°–ü–ï–•: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python main_ru.py")
        sys.exit(0)
    else:
        print("\n‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ DATABASE_URL –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PostgreSQL")
        sys.exit(1)
