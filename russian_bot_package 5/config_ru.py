"""–ú–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Telegram AI Bot."""

import os
from typing import Optional
from pydantic import BaseModel, Field
from pydantic_settings import BaseSettings
import dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–∞–º–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ Pydantic)
dotenv.load_dotenv()


class –ë–∞–∑–∞–î–∞–Ω–Ω—ã—Ö–ù–∞—Å—Ç—Ä–æ–π–∫–∏(BaseModel):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    —Å—Å—ã–ª–∫–∞: str = Field(..., env="DATABASE_URL")


class –ù–∞—Å—Ç—Ä–æ–π–∫–∏(BaseSettings):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Bot
    telegram_bot_token: str = Field(..., env="TELEGRAM_BOT_TOKEN")
    webhook_base_url: Optional[str] = Field(None, env="WEBHOOK_BASE_URL")
    webhook_path: str = Field("/webhook", env="WEBHOOK_PATH")
    webhook_secret_token: Optional[str] = Field(None, env="WEBHOOK_SECRET_TOKEN")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenAI
    openai_api_key: str = Field(..., env="OPENAI_API_KEY")
    openai_model: str = Field("gpt-4o", env="OPENAI_MODEL")
    openai_image_model: str = Field("dall-e-3", env="OPENAI_IMAGE_MODEL")
    openai_tts_model: str = Field("tts-1", env="OPENAI_TTS_MODEL")
    openai_whisper_model: str = Field("whisper-1", env="OPENAI_WHISPER_MODEL")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ Database Configuration)
    –±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö: –ë–∞–∑–∞–î–∞–Ω–Ω—ã—Ö–ù–∞—Å—Ç—Ä–æ–π–∫–∏ = –ë–∞–∑–∞–î–∞–Ω–Ω—ã—Ö–ù–∞—Å—Ç—Ä–æ–π–∫–∏(—Å—Å—ã–ª–∫–∞=os.getenv("DATABASE_URL", ""))
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    super_admin_id: int = Field(..., env="SUPER_ADMIN_ID")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
    payment_provider_token: Optional[str] = Field(None, env="PAYMENT_PROVIDER_TOKEN")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    max_history_messages: int = Field(16, env="MAX_HISTORY_MESSAGES")
    
    # –õ–∏–º–∏—Ç—ã —É—Ä–æ–≤–Ω—è FREE
    free_daily_messages: int = Field(20, env="FREE_DAILY_MESSAGES")
    free_daily_images: int = Field(5, env="FREE_DAILY_IMAGES")
    free_daily_voice: int = Field(10, env="FREE_DAILY_VOICE")
    
    # –õ–∏–º–∏—Ç—ã —É—Ä–æ–≤–Ω—è PRO (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ Monetization - 199‚ÇΩ)
    pro_daily_messages: int = Field(200, env="PRO_DAILY_MESSAGES")
    pro_daily_images: int = Field(50, env="PRO_DAILY_IMAGES")
    pro_daily_voice: int = Field(100, env="PRO_DAILY_VOICE")
    pro_price_rub: int = Field(199, env="PRO_PRICE_RUB")
    
    # –õ–∏–º–∏—Ç—ã —É—Ä–æ–≤–Ω—è TEAM (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ Monetization - 799‚ÇΩ)
    team_daily_messages: int = Field(1000, env="TEAM_DAILY_MESSAGES")
    team_daily_images: int = Field(200, env="TEAM_DAILY_IMAGES")
    team_daily_voice: int = Field(500, env="TEAM_DAILY_VOICE")
    team_price_rub: int = Field(799, env="TEAM_PRICE_RUB")
    
    # –°—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    environment: str = Field("production", env="ENVIRONMENT")
    debug: bool = Field(False, env="DEBUG")
    
    model_config = {
        "env_file": ".env",
        "env_file_encoding": "utf-8",
        "extra": "ignore"
    }
    
    def __init__(self, **kwargs):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ graceful-deployment-failure)."""
        try:
            super().__init__(**kwargs)
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ DATABASE_URL (—Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏)
            if self.–±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö.—Å—Å—ã–ª–∫–∞.startswith("postgresql+asyncpg:"):
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç DATABASE_URL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'postgresql://' –≤–º–µ—Å—Ç–æ 'postgresql+asyncpg:'")
        except Exception as e:
            print(f"""
‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}

üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
   - TELEGRAM_BOT_TOKEN (–æ—Ç @BotFather)
   - OPENAI_API_KEY (–æ—Ç OpenAI)
   - DATABASE_URL (—Ñ–æ—Ä–º–∞—Ç: postgresql://user:pass@host:port/db)
   - SUPER_ADMIN_ID (–≤–∞—à Telegram ID)

üîß –ü—Ä–∏–º–µ—Ä DATABASE_URL:
   postgresql://postgres:password@localhost:5432/russian_bot_db

üìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º. QUICK_START.md
            """)
            raise


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫
–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ = –ù–∞—Å—Ç—Ä–æ–π–∫–∏()