#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Railway –¥–µ–ø–ª–æ—è.
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –ø–∞–º—è—Ç–∏ –æ Project Startup Configuration.
"""

import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π."""
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram AI Bot...")
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    logger.info(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = [
        'DATABASE_URL', 
        'TELEGRAM_BOT_TOKEN', 
        'OPENAI_API_KEY',
        'SUPER_ADMIN_ID'
    ]
    
    missing_vars = []
    for var in required_vars:
        value = os.getenv(var)
        if not value:
            missing_vars.append(var)
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            masked_value = value[:8] + "..." if len(value) > 8 else value
            print(f"‚úÖ {var}: {masked_value}")
    
    if missing_vars:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {missing_vars}")
        print("\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Railway Dashboard")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç")
        print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Variables") 
        print("4. –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
        for var in missing_vars:
            print(f"   - {var}")
        print("\nüìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º. QUICK_START.md")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try:
        import uvicorn
        print(f"‚úÖ uvicorn –Ω–∞–π–¥–µ–Ω: –≤–µ—Ä—Å–∏—è {uvicorn.__version__}")
        logger.info(f"uvicorn –≤–µ—Ä—Å–∏—è: {uvicorn.__version__}")
    except ImportError as e:
        print(f"‚ùå uvicorn –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ requirements.txt –∏ –ª–æ–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏")
        logger.error(f"uvicorn –∏–º–ø–æ—Ä—Ç –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try:
        from main import –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ main:–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è main:–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        
        # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
        try:
            import main
            print("‚úÖ –ú–æ–¥—É–ª—å main –Ω–∞–π–¥–µ–Ω")
            if hasattr(main, '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'):
                print("‚úÖ –ê—Ç—Ä–∏–±—É—Ç '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚ùå –ê—Ç—Ä–∏–±—É—Ç '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ main")
                print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã: {dir(main)}")
        except ImportError as ie:
            print(f"‚ùå –ú–æ–¥—É–ª—å main –Ω–µ –Ω–∞–π–¥–µ–Ω: {ie}")
        
        sys.exit(1)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
    port = int(os.getenv('PORT', 8000))
    print(f"üåê –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    logger.info(f"–ü–æ—Ä—Ç: {port}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ WEBHOOK_BASE_URL
    webhook_url = os.getenv('WEBHOOK_BASE_URL')
    if webhook_url:
        print(f"üåê Webhook URL: {webhook_url}")
    else:
        print("‚ö†Ô∏è  WEBHOOK_BASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - webhook –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å")
    
    print("üöÄ –ó–∞–ø—É—Å–∫ uvicorn...")
    logger.info("–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ uvicorn")
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try:
        uvicorn.run(
            "main:–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            host="0.0.0.0",
            port=port,
            log_level="info",
            access_log=True
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ uvicorn: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()–º
